set worksheetname department_info;
-------this year metrics-------
DEFINE start_day_idnt = '2018001';
DEFINE end_day_idnt = '2018070';
DEFINE start_wk_idnt = '201801';
DEFINE end_wk_idnt = '2018010';
DEFINE mth = 'YTD_2018';


sbergs.cust_groups_wk10ytdly

select * from sbergs.cust_groups_wk10ytdty where rownum <55

create table department_info&mth as
select
cust.custgroup,
(case when stre.indiv_id= ecom.indiv_id then stre.indiv_id else coalesce(stre.indiv_id, ecom.indiv_id) end)                                                                     as indiv_id,
coalesce(stre.seas, ecom.seas)                                                                                                                                                                                                                                  as seasonal_sba,
coalesce(stre.dept_desc, ecom.dept_desc)                                                                                                                                                                                                         as dept_desc,
coalesce(stre.price_typ_ind, ecom.price_typ_ind)                                                                                                                                                                                           as price_typ_ind,
sum((coalesce(stre.store_trans,0))+ (coalesce(ecom.ecom_trans, 0)))                                                                                                                                                   as trans,
sum((coalesce(stre.store_sales,0))+ (coalesce(ecom.ecom_sales, 0)))                                                                                                                                                   as sales,
sum((coalesce(stre.store_units,0))+ (coalesce(ecom.ecom_units, 0)))                                                                                                                                                   as units,
sum(stre.store_gm)                                                                                                                                                                                                                                                        as store_gm,
sum(stre.store_sales)                                                                                                                                                                                                                                                    as store_sales,
(case when stre.indiv_id= ecom.indiv_id then 'omni' when stre.indiv_id >0 then 'store only' when ecom.indiv_id >0 then 'ecom only' end)       as channel
from sbergs.cust_groups_wk10ytdty cust
full outer join(select
          sku.dept_desc,
          dtl.indiv_id,
          price_typ_ind,
          (case when sku.item_typ_desc = 'Seasonal' then 'Seasonal' else 'SBA' end) as seas,
          count(distinct dtl.pos_trans_key)                       as store_trans,
          sum(dtl.extended_sls_amt)                               as store_sales,
          sum(dtl.grs_mrgn_amt)                                   as store_gm,
          sum(dtl.qty)                                            as store_units
         from         ua_pos_trans_dtl dtl
         inner join ua_store str on dtl.loc_key = str.loc_key
         inner join ua_pos_prod_sku sku         on dtl.sku_key = sku.sku_key
         where dtl.wk_idnt between &start_wk_idnt and &end_wk_idnt and dtl.trans_typ_key in(19,22,33) and str.distt_idnt != '999'
        group by dtl.indiv_id, price_typ_ind, sku.dept_desc, case when sku.item_typ_desc = 'Seasonal' then 'Seasonal' else 'SBA' end) stre on cust.indiv_id = stre.indiv_id
full outer join( select
       case when ecom.dmnd_ttl_promo_amt <0 then 'P' else 'R' end as price_typ_ind,
       ((case when b.div_desc = 'SEASONAL' then 'Seasonal' else 'SBA' end)  as seas,
       sku.dept_desc,
        ecom.indiv_id,
        count(distinct ecom.order_id)                           as ecom_trans,
        sum(ecom.flfll_net_ttl_amt)                             as ecom_sales,
        sum(ecom.flfll_unit_cnt)                                as ecom_units
        from ua_ecom_order_dtl   ecom
        inner join ua_pos_tm_day tm on to_date(ecom.flfll_first_dt) = (tm.day_dt)
        inner join ua_pos_prod_sku sku on ecom.sku_name = sku.sku_idnt
        where tm.wk_idnt between &start_wk_idnt and &end_wk_idnt
        group by ecom.indiv_id, sku.dept_desc,   case when ecom.dmnd_ttl_promo_amt <0 then 'P' else 'R' end , case when sku.item_typ_desc = 'Seasonal' then 'Seasonal' else 'SBA' end) ecom on cust.indiv_id = ecom.indiv_id and stre.dept_desc = ecom.dept_desc and stre.price_typ_ind = ecom.price_typ_ind
group by stre.indiv_id, ecom.indiv_id, coalesce(stre.dept_desc, ecom.dept_desc),  coalesce(stre.price_typ_ind, ecom.price_typ_ind))  ecom on   cust.indiv_id=ecom.indiv_id

group by stre.indiv_id, ecom.indiv_id, coalesce(stre.dept_desc, ecom.dept_desc, case when dmnd_ttl_promo_amt <0 then 'P' else 'R' end as 'price_typ_ind', custgroup

select

select * from ua_pos_prod_sku where
dept_desc like '%ACCENTS & CONTAINERS%',  '%CANDLES%',   '%CHRISTMAS%',  '% CUSTOM FLORAL%',   '%FLORAL%',   '%HOME ACCENTS%',  '% MINI SEASON%'
